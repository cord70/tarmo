<!DOCTYPE html>
<html lang="ru">
 <head>
  <title> Системы из спичечных коробков </title>
  <meta charset="utf-8">
  <meta content="width=device-width, initial-scale=1" name="viewport">
  <link href="https://cord70.github.io/tarmo/1999/msg_99-08-23-23-03-15.htm" rel="canonical">
  <link href="https://cord70.github.io/tarmo/favicon.svg" rel="icon" sizes="any" type="image/svg+xml">
  <link href="../images/main.css" rel="stylesheet">
  <script defer="" src="../images/ansimeta.js"> </script>
 </head>
 <body>

  <header>
  </header>

  <main>

   <h1> Системы из спичечных коробков </h1>

   <p> From:
    <b> Тармо Пикаро </b> ( tpikaro@turkuamk.fi ) Date: 1999-08-23 23:03 </p>

   <p> по поводу статьи: http://www.nestor.minsk.by/kg/9703/k1211.htm </p>

   <p> Я хотел испытать как выглядит из себя адаптационная система
            созданная
    <br> из спичечных коробков и решил написать программку которая
            бы
    <br> емулировала все эти коробки с бусинками (лень как то было
    <br> использовать настоящие спичечные коробки). :) </p>

   <p> скачать отсюда: http://www.tekniikka.turkuamk.fi/~tpikaro/ai/aiplayb.exe
    <br> 10 Kb, незапакованно, beta.
    <br> (source довольно кошмарно выглядит - надо - спросите - вышлю) </p>

   <p> вот мои коментарии по этому поводу... </p>

   <p> я сделал адаптацию к игре "3 пешек".
    <br> насколько я понял правила там следующие:
    <br> ---
    <br> * доска 3x3, пешки - 3 белые снизу, 3 черные сверху.
    <br> * берется n:ное количество коробков на которых изображены
            все
    <br> возможные позиции игры.
    <br> * также на каждом коробке помечаются разными цветами
    <br> все возможные ходы на данную позицию и в коробок ложатся
            по 3 бусинки
    <br> всех тех цветов которые есть на коробке. (то есть если возможен
            ход
    <br> вперед, помеченный красным цветом - в коробке вначале лежит
            3 бусинки
    <br> красного цвета)
    <br> * пешки могут ходит как и в шахматах - пойти вперед или
            съесть
    <br> противника по диагонали. (вперед кушать не могут, и "наступать"
    <br> на пешки сверху тоже)
    <br> * во время игры берется коробок с изображенной позицией,
    <br> коробок встряхивается и оттуда достается случайная бусинка
            и делается
    <br> ход соответствующий цвету. (после этого ходит противник,
            затем
    <br> процедура повторяется)
    <br> * если AI выигрывает (то есть не противник) то в коробки
            добавляются
    <br> по 3 бусинки того же цвета что был вынут из коробка ;
    <br> если же AI проигрывает то у него отнимается по одной бусинке;если
    <br> будет ничья то ничего не делается. (правильно ли я понял
            ?-вынутая
    <br> бусинка в расчёт не берется =возвражается в коробок после
            окончания
    <br> партии)
    <br> * выигрывает тот кто достигнет первым противоположной линии
            (тама где
    <br> стоят пешки противника) или тото кто съест все пешки противника.
    <br> Ничья - когда кто-то из игроков не может сделать хода.
    <br> --- </p>

   <p> это что касается правил...
    <br> что же касается программы...
    <br> противником я поставил "Mr. Stupid" :) который
            просто ходит куда
    <br> попало без всякого расчета.
    <br> AI довольно неплохо адаптируется... но ! он не доходит до
    <br> совершенства ! - Stupid все равно умудряется его как-нибудь
            да и
    <br> обыграть. Сейчас объясню почему... </p>

   <p> Итак... мысленно возьмем самую начальную позицию и поставим
            её на
    <br> самый верх - это у нас будет вершиной дерева.
    <br> (опять я со своим деревом...) :) поставим 3 комбинации продолжения
    <br> как ветви этого дерева. и каждой ветке сделаем то же самое
            до тех пор
    <br> пока у нас на всех концах будет конец партии. Теперь...
    <br> Мы естественно следуем только по одному пути... (если партия
            одна)
    <br> от самой вершины к какой-нибудь ветке... Если партия оказывается
    <br> проигранной - отнимаются бусинки со всех сделанных ходов
            - примерно
    <br> то же что и утоньшать ветки по пройденному пути - меньше
            возможностей
    <br> на то,что мы в следущий раз пойдем по меньшей ветке.
    <br> (наверное это слишком ассоциативно...). Но после какого-то
            момента
    <br> появляется ветка через которую прошло 3 проигрыша подряд
            и
    <br> не одного выигрыша. Аха ! Ветка "погибает", что
            означает то,что
    <br> больше бусинок у нас на тот ход нету и туда мы больше в
            жизни
    <br> не попадем. И хотя на той погившей ветке наверняка
    <br> были выигрышные и/или ничейные комбинации - но тем не менее
            мы
    <br> абсолютно конкретно разобрались с этой веткой раз и навсегда.
    <br> Это и дает шанс Stupidу обыгрывать AI - соседнии ветки (=другие
    <br> варианты ходов) могут оказаться 100% проигрышными или
    <br> проигрышными при каком-то именном ходе противника. </p>

   <p> Как сделать идеальный вариант AI для игры в пешки (и не только)?
    <br> следующие идеи посетили меня:
    <br> вариант1. в случае проигрыша
    <br> - если это последняя бусинка - проверить отмерла ли вся
            ветка
    <br> да - удалить последнюю бусинку, нет - ничего не удалять
    <br> - если не последняя - отнять одну бусинку.
    <br> вариант2. наказывать удалением одной бусинки с подледнего
            хода.
    <br> - это значительно замедлит скорость адаптации. </p>

   <p> Далее я пока не пытался делать улучшенной версии AIPLAY
    <br> - надеюсь скоро доделать. </p>

   <p> Кстати... мировая вещь эти спичечные коробки - в практические
    <br> работы по C++ советую кому-нибудь запихать. :) </p>

   <p> Ещё идеи...
    <br> Кстати... AI по идее мог бы адаптироваться как-нибудь к
            симметрии
    <br> доски за счет чего адаптация прошла бы раза в 2 быстрее. </p>

   <p> Чего не хватает этой системе - full flow control. :)
    <br> Сама система должна "задевать саму себя" - то
            есть...
    <br> - система получает информацию.
    <br> - она адаптируется, генерируя при этом новую информацию.
    <br> Теперь же надо продолжить адаптацию адаптируясь к этой новой
    <br> информации.
    <br> Опять же... я говорю слишком туманно наверное. :)
    <br> </p>
  </main>

  <nav>
   <p> prev 1999-08-23
    <b> <a href="../1999/msg_99-08-23-10-58-29.htm">
      Re[2]: Куча идей </a> </b> (Валерий Бахарев)
    <br> <br> next 1999-08-24
    <b> <a href="../1999/msg_99-08-24-23-19-05.htm">
      Eliza - психолог? :) </a> </b> (Тармо Пикаро) </p>
  </nav>

  <p> &nbsp; </p>

  <footer>
  </footer>

  <noscript>
   <div>
    
   </div> </noscript>
 </body>
</html>